{
  "persona": "Methodical Learner",
  "personaKey": "methodical-learner",
  "goal": "Figure out how to authenticate API requests",
  "startUrl": "https://docs.payabli.com/developers/developer-overview",
  "siteConfig": {
    "name": "Payabli Docs",
    "contentSelector": "main",
    "excludeLinks": []
  },
  "steps": [
    {
      "stepNumber": 1,
      "page": {
        "title": "Resources for developers | Payabli",
        "headings": [
          "Resources for developers"
        ],
        "contentPreview": "Developers\nIntegration guides\nEmbedded components\nSDKs & tools\nAPI reference\nDevelopers\nGetting started\nChangelog\nReferences\nOverview\nKey references\nPay In references\nPay Out references\nPay Ops references\nResources for developers\nCopy page\nLearn about Payabli's developer documentation and tools\n\nWelcome to the Payabli developer documentation! These docs are designed to help you integrate with Payabli’s APIs and services, providing you with the tools and resources you need to build and maintain your payment solutions.\n\nGet started\nLearn where to start with your Payabli integration\nTest cards and accounts\nUse our test cards and accounts to simulate transactions and test your integration\nAPI reference\nFind detailed API documentation that covers all aspects of the Payabli platform\nChangelog\nStay up-to-date with the latest API changes\nIntegration guides\nRead step-by-step guides for integrating with Payabli’s APIs\nEmbedded components\nLearn how to use Payabli’s embedded components for low-cod",
        "fullContent": "Developers\nIntegration guides\nEmbedded components\nSDKs & tools\nAPI reference\nDevelopers\nGetting started\nChangelog\nReferences\nOverview\nKey references\nPay In references\nPay Out references\nPay Ops references\nResources for developers\nCopy page\nLearn about Payabli's developer documentation and tools\n\nWelcome to the Payabli developer documentation! These docs are designed to help you integrate with Payabli’s APIs and services, providing you with the tools and resources you need to build and maintain your payment solutions.\n\nGet started\nLearn where to start with your Payabli integration\nTest cards and accounts\nUse our test cards and accounts to simulate transactions and test your integration\nAPI reference\nFind detailed API documentation that covers all aspects of the Payabli platform\nChangelog\nStay up-to-date with the latest API changes\nIntegration guides\nRead step-by-step guides for integrating with Payabli’s APIs\nEmbedded components\nLearn how to use Payabli’s embedded components for low-code payments integration\nSDKs and tools\nAccess SDKs, libraries, and tools to simplify your development process\nReferences\nLook up glossary terms, response codes, errors, and statuses\nWas this page helpful?\nYes\nNo\nBuilt with",
        "totalLength": 1221,
        "url": "https://docs.payabli.com/developers/developer-overview",
        "contentSource": "main (config)",
        "usingConfig": true,
        "content": "Developers\nIntegration guides\nEmbedded components\nSDKs & tools\nAPI reference\nDevelopers\nGetting started\nChangelog\nReferences\nOverview\nKey references\nPay In references\nPay Out references\nPay Ops references\nResources for developers\nCopy page\nLearn about Payabli's developer documentation and tools\n\nWelcome to the Payabli developer documentation! These docs are designed to help you integrate with Payabli’s APIs and services, providing you with the tools and resources you need to build and maintain your payment solutions.\n\nGet started\nLearn where to start with your Payabli integration\nTest cards and accounts\nUse our test cards and accounts to simulate transactions and test your integration\nAPI reference\nFind detailed API documentation that covers all aspects of the Payabli platform\nChangelog\nStay up-to-date with the latest API changes\nIntegration guides\nRead step-by-step guides for integrating with Payabli’s APIs\nEmbedded components\nLearn how to use Payabli’s embedded components for low-code payments integration\nSDKs and tools\nAccess SDKs, libraries, and tools to simplify your development process\nReferences\nLook up glossary terms, response codes, errors, and statuses\nWas this page helpful?\nYes\nNo\nBuilt with",
        "usedFullContent": true
      },
      "availableLinks": 9,
      "decision": {
        "reasoning": "This page is clearly an overview/index page that mentions API reference and integration guides but doesn't contain any actual authentication details, code examples, or technical implementation information. As a methodical learner, I need to start with the fundamentals and 'Getting started' is the logical first step to understand prerequisites and basic concepts before diving into API authentication.",
        "action": "click",
        "linkIndex": 5,
        "confidence": "high"
      }
    },
    {
      "stepNumber": 2,
      "page": {
        "title": "Getting started for developers | Payabli",
        "headings": [
          "Getting started for developers",
          "The basics, start to finish",
          "Choose integration style",
          "Build, test, go live",
          "Board merchants",
          "Learn the lingo",
          "Entities",
          "Entrypoint",
          "Boarding",
          "Tokens and test accounts",
          "Environments",
          "API tokens",
          "Test cards and accounts",
          "Test paypoints",
          "Changelog"
        ],
        "contentPreview": "Developers\nIntegration guides\nEmbedded components\nSDKs & tools\nAPI reference\nDevelopers\nGetting started\nChangelog\nReferences\nOverview\nKey references\nPay In references\nPay Out references\nPay Ops references\nOn this page\nThe basics, start to finish\nLearn the lingo\nEntities\nEntrypoint\nBoarding\nTokens and test accounts\nEnvironments\nAPI tokens\nTest cards and accounts\nTest paypoints\nGetting started for developers\nCopy page\n\nLearn how to build a world-class payments integration with Payabli\n\nApplies to:\nDevelopers\n\nWelcome to Payabli! This guide gives you the foundational knowledge you need to get started with your Payabli integration. Taking the time to read through this page now to get oriented can help you get started even faster with Payabli.\n\nThis guide starts off with the basic process between signing up with Payabli and getting your first merchant on board. Then, in Learn the lingo, we cover some Payabli concepts that people new to Payabli may have trouble understanding at first. In the",
        "fullContent": "Developers\nIntegration guides\nEmbedded components\nSDKs & tools\nAPI reference\nDevelopers\nGetting started\nChangelog\nReferences\nOverview\nKey references\nPay In references\nPay Out references\nPay Ops references\nOn this page\nThe basics, start to finish\nLearn the lingo\nEntities\nEntrypoint\nBoarding\nTokens and test accounts\nEnvironments\nAPI tokens\nTest cards and accounts\nTest paypoints\nGetting started for developers\nCopy page\n\nLearn how to build a world-class payments integration with Payabli\n\nApplies to:\nDevelopers\n\nWelcome to Payabli! This guide gives you the foundational knowledge you need to get started with your Payabli integration. Taking the time to read through this page now to get oriented can help you get started even faster with Payabli.\n\nThis guide starts off with the basic process between signing up with Payabli and getting your first merchant on board. Then, in Learn the lingo, we cover some Payabli concepts that people new to Payabli may have trouble understanding at first. In the Tokens and test accounts section, we briefly cover some tools you’ll need to build and test your integration.\n\nOkay, let’s get started.\n\nThe basics, start to finish\n\nYour goal with Payabli is to go live, onboard your merchants, and start monetizing your money in and money out transactions. The process between signing up and going live looks like this:\n\n1\nChoose integration style\n\nPayabli offers a couple of ways to integrate with our products. You can pick one, or you can use a hybrid approach. These options have different required resources, security implications, features, and integration challenges.\n\nDirect access APIs\n\nAccept payments, manage customers and subscriptions, build products, address payment disputes, and onboard merchants while maintaining total control over your user experience. This method may require more work from you to meet PCI compliance.\n\nPrebuilt embedded UI components\n\nSeamlessly embed intuitive payment forms that securely capture payment data to generate a token. The token replaces sensitive cardholder or bank account data you can use with the direct access APIs to make transactions. This method dramatically reduces the PCI compliance footprint, with minimal impact to the customer experience.\n\nReporting and statistics APIs\n\nUse webhooks to receive near real-time notifications of events happening on a processing account. Use webhooks alongside the Query API to let software partners to pull detailed payments data from the Payabli platform. You can also use the statistics API to build rich dashboards and analytics into your system.\n\n2\nBuild, test, go live\n\nDuring your integration kickoff, we give you access to the sandbox environment. You’ll learn more in your integration kickoff, but the idea is to use the sandbox to build Payabli into your product and test it.\n\nThe sandbox lets you:\n\nMake test payments.\nSimulate boarding paypoints and managing a portfolio.\nCustomize Payabli’s embedded components to mimic your UX.\nSet up payment devices and test card-present transactions.\nExperiment with reports and notifications.\n\nThe docs can really help you understand what features are available to you and how you can include them with your integration.\n\nAfter you’ve tested thoroughly, our solution engineering team certifies your integration and gives you production access.\n\n3\nBoard merchants\n\nWhen your integration is live, you can start boarding merchants. Merchants must apply using a boarding link that’s generated from a boarding template, when they submit the form, it becomes a boarding application, and Payabli works on underwriting and will either approve or deny the merchant. When approved, a boarding application converts the merchant into a paypoint, which can then process payments with Payabli.\n\nThis is just barely scratching the surface of the merchant boarding process, so see Board Merchants to learn more.\n\nLearn the lingo\n\nBefore you start building, we recommend that you get to know some of Payabli’s terminology by reading the comprehensive glossary. Let’s go over the terms you’ll see a lot during your integration.\n\nEntities\n\nEntities make up Payabli’s hierarchy. You add and manage entities with PartnerHub and the API. Entities include paypoints, organizations, customers, and vendors.\n\nPaypoints are merchants.\nOrganizations are used group and manage paypoints.\nCustomers are the people spending money with your merchants.\nVendors are the folks you and your paypoints pay for goods and services (like the carpet cleaners, office supply folks, and so on).\n\nThis is just a high-level overview of entities, so you can learn more about them in the Entities guide.\n\nEntrypoint\n\nEntrypoint, entry, and entry name all come up a lot during your integration journey. An entrypoint is a Payabli-generated alias that identifies a paypoint or organization. When you make an API call, we use the entry value to identify the paypoint or organization the request should belong to, and almost every request includes an entrypoint value.",
        "totalLength": 7480,
        "url": "https://docs.payabli.com/developers/developer-guides/quickstart",
        "contentSource": "main (config)",
        "usingConfig": true,
        "content": "Developers\nIntegration guides\nEmbedded components\nSDKs & tools\nAPI reference\nDevelopers\nGetting started\nChangelog\nReferences\nOverview\nKey references\nPay In references\nPay Out references\nPay Ops references\nOn this page\nThe basics, start to finish\nLearn the lingo\nEntities\nEntrypoint\nBoarding\nTokens and test accounts\nEnvironments\nAPI tokens\nTest cards and accounts\nTest paypoints\nGetting started for developers\nCopy page\n\nLearn how to build a world-class payments integration with Payabli\n\nApplies to:\nDevelopers\n\nWelcome to Payabli! This guide gives you the foundational knowledge you need to get started with your Payabli integration. Taking the time to read through this page now to get oriented can help you get started even faster with Payabli.\n\nThis guide starts off with the basic process between signing up with Payabli and getting your first merchant on board. Then, in Learn the lingo, we cover some Payabli concepts that people new to Payabli may have trouble understanding at first. In the Tokens and test accounts section, we briefly cover some tools you’ll need to build and test your integration.\n\nOkay, let’s get started.\n\nThe basics, start to finish\n\nYour goal with Payabli is to go live, onboard your merchants, and start monetizing your money in and money out transactions. The process between signing up and going live looks like this:\n\n1\nChoose integration style\n\nPayabli offers a couple of ways to integrate with our products. You can pick one, or you can use a hybrid approach. These options have different required resources, security implications, features, and integration challenges.\n\nDirect access APIs\n\nAccept payments, manage customers and subscriptions, build products, address payment disputes, and onboard merchants while maintaining total control over your user experience. This method may require more work from you to meet PCI compliance.\n\nPrebuilt embedded UI components\n\nSeamlessly embed intuitive payment forms that securely capture payment data to generate a token. The token replaces sensitive cardholder or bank account data you can use with the direct access APIs to make transactions. This method dramatically reduces the PCI compliance footprint, with minimal impact to the customer experience.\n\nReporting and statistics APIs\n\nUse webhooks to receive near real-time notifications of events happening on a processing account. Use webhooks alongside the Query API to let software partners to pull detailed payments data from the Payabli platform. You can also use the statistics API to build rich dashboards and analytics into your system.\n\n2\nBuild, test, go live\n\nDuring your integration kickoff, we give you access to the sandbox environment. You’ll learn more in your integration kickoff, but the idea is to use the sandbox to build Payabli into your product and test it.\n\nThe sandbox lets you:\n\nMake test payments.\nSimulate boarding paypoints and managing a portfolio.\nCustomize Payabli’s embedded components to mimic your UX.\nSet up payment devices and test card-present transactions.\nExperiment with reports and notifications.\n\nThe docs can really help you understand what features are available to you and how you can include them with your integration.\n\nAfter you’ve tested thoroughly, our solution engineering team certifies your integration and gives you production access.\n\n3\nBoard merchants\n\nWhen your integration is live, you can start boarding merchants. Merchants must apply using a boarding link that’s generated from a boarding template, when they submit the form, it becomes a boarding application, and Payabli works on underwriting and will either approve or deny the merchant. When approved, a boarding application converts the merchant into a paypoint, which can then process payments with Payabli.\n\nThis is just barely scratching the surface of the merchant boarding process, so see Board Merchants to learn more.\n\nLearn the lingo\n\nBefore you start building, we recommend that you get to know some of Payabli’s terminology by reading the comprehensive glossary. Let’s go over the terms you’ll see a lot during your integration.\n\nEntities\n\nEntities make up Payabli’s hierarchy. You add and manage entities with PartnerHub and the API. Entities include paypoints, organizations, customers, and vendors.\n\nPaypoints are merchants.\nOrganizations are used group and manage paypoints.\nCustomers are the people spending money with your merchants.\nVendors are the folks you and your paypoints pay for goods and services (like the carpet cleaners, office supply folks, and so on).\n\nThis is just a high-level overview of entities, so you can learn more about them in the Entities guide.\n\nEntrypoint\n\nEntrypoint, entry, and entry name all come up a lot during your integration journey. An entrypoint is a Payabli-generated alias that identifies a paypoint or organization. When you make an API call, we use the entry value to identify the paypoint or organization the request should belong to, and almost every request includes an entrypoint value.",
        "usedFullContent": true
      },
      "availableLinks": 11,
      "decision": {
        "reasoning": "This page mentions API tokens in the sections list and briefly references them in the content, but doesn't provide the actual authentication details, code examples, or step-by-step instructions I need as a methodical learner. The API reference section is likely where the technical authentication details would be found.",
        "action": "click",
        "linkIndex": 6,
        "confidence": "high"
      }
    },
    {
      "stepNumber": 3,
      "page": {
        "title": "API overview | Payabli",
        "headings": [
          "API overview",
          "Authentication",
          "Create and manage API tokens",
          "API token types",
          "Environments",
          "Sandbox",
          "Production",
          "Rate limits",
          "Request limits",
          "Fraud controls",
          "Request timeouts",
          "Preventing duplicate requests",
          "409 conflict",
          "Use webhooks to avoid duplicate transactions",
          "Entrypoint vs entry",
          "API responseCode and resultCode Reference"
        ],
        "contentPreview": "Developers\nIntegration guides\nEmbedded components\nSDKs & tools\nAPI reference\nUsing the API\nAPI overview\nAPI responses\nAPI\nPay In endpoints\nPay Out endpoints\nPay Ops endpoints\nShared resource endpoints\nWebhooks\nPay In\nPay Out\nOn this page\nAuthentication\nCreate and manage API tokens\nAPI token types\nEnvironments\nSandbox\nProduction\nRate limits\nRequest limits\nFraud controls\nRequest timeouts\nPreventing duplicate requests\n409 conflict\nUse webhooks to avoid duplicate transactions\nEntrypoint vs entry\nUsing the API\nAPI overview\nCopy page\nGet started with the Payabli API\n\nWelcome to the Payabli API reference. Here you’ll find all the information you need for using the Payabli APIs.\n\nAuthentication\n\nThe Payabli API uses secure API tokens to authenticate requests. This guide explains how to authenticate, the different API tokens you may use, and how to create and manage basic API tokens.\n\nNote that API tokens are different than payment method tokens. API tokens are used for authentication, and paym",
        "fullContent": "Developers\nIntegration guides\nEmbedded components\nSDKs & tools\nAPI reference\nUsing the API\nAPI overview\nAPI responses\nAPI\nPay In endpoints\nPay Out endpoints\nPay Ops endpoints\nShared resource endpoints\nWebhooks\nPay In\nPay Out\nOn this page\nAuthentication\nCreate and manage API tokens\nAPI token types\nEnvironments\nSandbox\nProduction\nRate limits\nRequest limits\nFraud controls\nRequest timeouts\nPreventing duplicate requests\n409 conflict\nUse webhooks to avoid duplicate transactions\nEntrypoint vs entry\nUsing the API\nAPI overview\nCopy page\nGet started with the Payabli API\n\nWelcome to the Payabli API reference. Here you’ll find all the information you need for using the Payabli APIs.\n\nAuthentication\n\nThe Payabli API uses secure API tokens to authenticate requests. This guide explains how to authenticate, the different API tokens you may use, and how to create and manage basic API tokens.\n\nNote that API tokens are different than payment method tokens. API tokens are used for authentication, and payment method tokenization exchange sensitive payment method information for secure tokens.\n\nYour API tokens carry privileges, so be sure to keep them secure! Don’t share your private API tokens in public areas such as GitHub, client-side code, or public domains.\n\nWhen you authenticate to the API, send the API token in the request header with the key requestToken.\n\nExample header\n$\t  curl --request POST \\\n>\t      --url 'https://api-sandbox.payabli.com/api/Endpoint'\\\n>\t      --header 'accept: application/json' \\\n>\t      --header 'content-type: application/*+json' \\\n>\t      --header 'requestToken: <API token>'\n\nYou must make all API requests over HTTPS. API requests without authentication will fail.\n\nCreate and manage API tokens\n\nYou can create and manage your own API tokens in PartnerHub.\n\nNavigate to Developers > API Tokens, then click Create API Token.\nIn the modal, configure your API token. See the configuration options table below.\nWhen finished, save your work.\nConfiguration option\tDescription\nToken Mode\tPublic tokens are for embedded components, including Creator components. Private tokens are for Payabli APIs and payment devices.\nToken Type\tThe organization API token type is the most commonly used, and gives partners and paypoints access to most endpoints. The application API token is more advanced, and is used for authentication and managing entities. You rarely need to use an application API token. See the API Token Types section for more information.\nToken Lifetime\tAPI tokens can have a lifetime of between 1 and 24 months. Remember that you can delete unused or compromised API tokens at any time from the dashboard.\nIP Restrictions\tUse this option to create an allowlist of IP addresses that can make requests with this API token. Leaving this option blank allows all IP addresses to make requests with this API token.\nCreator Token?\tSelect Yes to use this API token with Creator components. The API token type must be Public. Creator API tokens require that you configure domain restrictions.\nDomain Restrictions\tOnly available with Creator API tokens. For security, you must add the domains that you embed Creator components on. For example, if they’re embedded on https://app.myproduct.com, then add https://app.myproduct here.\nDescription\tA descriptive name for the API token. This description appears in the dashboard and helps identify the API token.\n\nTo view or delete API tokens, navigate to Developers > API Tokens, then click the Action column of a token you want to manage.\n\nAPI token types\n\nTo enhance security, Payabli has several different types of API token, each with different scopes and lifetime.\n\nOrganization API token (most common)\nApplication API token\nUser API token\nTemporary API token\nEnvironments\n\nPayabli offers two environments: a sandbox environment for development and a production environment to bring your Payabli integration live.\n\nSandbox\n\nUse the sandbox environment to build your payments integration without having to charge actual payments and settle bank accounts. Test and run unlimited transactions and play around with Payabli’s tools to build your application.\n\nPayabli Client Success and Development Support give you your sandbox API token after your integration kickoff call.\n\nSandbox API URL: https://api-sandbox.payabli.com/api\n\nProduction\n\nUse the production environment to go live with your integration. Transactions in this environment charge payors and create actual settlements into bank accounts. This environment also lets you create bills and send them for actual payment.\n\nMake sure you have completed extensive testing before launching. Reach out to the Payabli team to make sure you’re ready to launch.\n\nProduction API URL: https://api.payabli.com/api\n\nRate limits\n\nFor security and fraud prevention, Payabli applies two different kinds of rate limits: request limits, and transaction limits (also known as fraud controls).\n\nPayabli reserves the right to alter rate limits in case of security concerns, and wi",
        "totalLength": 9486,
        "url": "https://docs.payabli.com/developers/api-reference/api-overview",
        "contentSource": "main (config)",
        "usingConfig": true,
        "content": "Developers\nIntegration guides\nEmbedded components\nSDKs & tools\nAPI reference\nUsing the API\nAPI overview\nAPI responses\nAPI\nPay In endpoints\nPay Out endpoints\nPay Ops endpoints\nShared resource endpoints\nWebhooks\nPay In\nPay Out\nOn this page\nAuthentication\nCreate and manage API tokens\nAPI token types\nEnvironments\nSandbox\nProduction\nRate limits\nRequest limits\nFraud controls\nRequest timeouts\nPreventing duplicate requests\n409 conflict\nUse webhooks to avoid duplicate transactions\nEntrypoint vs entry\nUsing the API\nAPI overview\nCopy page\nGet started with the Payabli API\n\nWelcome to the Payabli API reference. Here you’ll find all the information you need for using the Payabli APIs.\n\nAuthentication\n\nThe Payabli API uses secure API tokens to authenticate requests. This guide explains how to authenticate, the different API tokens you may use, and how to create and manage basic API tokens.\n\nNote that API tokens are different than payment method tokens. API tokens are used for authentication, and payment method tokenization exchange sensitive payment method information for secure tokens.\n\nYour API tokens carry privileges, so be sure to keep them secure! Don’t share your private API tokens in public areas such as GitHub, client-side code, or public domains.\n\nWhen you authenticate to the API, send the API token in the request header with the key requestToken.\n\nExample header\n$\t  curl --request POST \\\n>\t      --url 'https://api-sandbox.payabli.com/api/Endpoint'\\\n>\t      --header 'accept: application/json' \\\n>\t      --header 'content-type: application/*+json' \\\n>\t      --header 'requestToken: <API token>'\n\nYou must make all API requests over HTTPS. API requests without authentication will fail.\n\nCreate and manage API tokens\n\nYou can create and manage your own API tokens in PartnerHub.\n\nNavigate to Developers > API Tokens, then click Create API Token.\nIn the modal, configure your API token. See the configuration options table below.\nWhen finished, save your work.\nConfiguration option\tDescription\nToken Mode\tPublic tokens are for embedded components, including Creator components. Private tokens are for Payabli APIs and payment devices.\nToken Type\tThe organization API token type is the most commonly used, and gives partners and paypoints access to most endpoints. The application API token is more advanced, and is used for authentication and managing entities. You rarely need to use an application API token. See the API Token Types section for more information.\nToken Lifetime\tAPI tokens can have a lifetime of between 1 and 24 months. Remember that you can delete unused or compromised API tokens at any time from the dashboard.\nIP Restrictions\tUse this option to create an allowlist of IP addresses that can make requests with this API token. Leaving this option blank allows all IP addresses to make requests with this API token.\nCreator Token?\tSelect Yes to use this API token with Creator components. The API token type must be Public. Creator API tokens require that you configure domain restrictions.\nDomain Restrictions\tOnly available with Creator API tokens. For security, you must add the domains that you embed Creator components on. For example, if they’re embedded on https://app.myproduct.com, then add https://app.myproduct here.\nDescription\tA descriptive name for the API token. This description appears in the dashboard and helps identify the API token.\n\nTo view or delete API tokens, navigate to Developers > API Tokens, then click the Action column of a token you want to manage.\n\nAPI token types\n\nTo enhance security, Payabli has several different types of API token, each with different scopes and lifetime.\n\nOrganization API token (most common)\nApplication API token\nUser API token\nTemporary API token\nEnvironments\n\nPayabli offers two environments: a sandbox environment for development and a production environment to bring your Payabli integration live.\n\nSandbox\n\nUse the sandbox environment to build your payments integration without having to charge actual payments and settle bank accounts. Test and run unlimited transactions and play around with Payabli’s tools to build your application.\n\nPayabli Client Success and Development Support give you your sandbox API token after your integration kickoff call.\n\nSandbox API URL: https://api-sandbox.payabli.com/api\n\nProduction\n\nUse the production environment to go live with your integration. Transactions in this environment charge payors and create actual settlements into bank accounts. This environment also lets you create bills and send them for actual payment.\n\nMake sure you have completed extensive testing before launching. Reach out to the Payabli team to make sure you’re ready to launch.\n\nProduction API URL: https://api.payabli.com/api\n\nRate limits\n\nFor security and fraud prevention, Payabli applies two different kinds of rate limits: request limits, and transaction limits (also known as fraud controls).\n\nPayabli reserves the right to alter rate limits in case of security concerns, and wi",
        "usedFullContent": true
      },
      "availableLinks": 7,
      "decision": {
        "reasoning": "This page provides a comprehensive explanation of API authentication with complete context, prerequisites, multiple related sections that build on each other, and includes a complete curl example showing exactly how to authenticate requests with the requestToken header. The content covers authentication methods, token creation, token types, environments, and includes step-by-step instructions.",
        "action": "success",
        "confidence": "high",
        "contentStyleMatch": "perfect"
      }
    }
  ],
  "outcome": "success",
  "timestamp": "2025-10-19T00:27:07.335Z",
  "visitedUrls": [
    "https://docs.payabli.com/developers/developer-overview",
    "https://docs.payabli.com/developers/developer-guides/quickstart",
    "https://docs.payabli.com/developers/api-reference/api-overview"
  ],
  "tokenStats": {
    "totalContentCharsSent": 11221,
    "progressiveLoadCount": 0
  },
  "successFeedback": {
    "contentStyleMatch": "perfect",
    "foundAnswer": "This page provides a comprehensive explanation of API authentication with complete context, prerequisites, multiple related sections that build on each other, and includes a complete curl example showing exactly how to authenticate requests with the requestToken header. The content covers authentication methods, token creation, token types, environments, and includes step-by-step instructions.",
    "needsImprovement": false
  }
}